{"version":3,"sources":["styles.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Wrapper","styled","div","Title","h2","Form","form","Label","label","Input","input","Button","button","ButtonItems","Text","p","TextFilter","List","ul","Items","li","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","type","pattern","title","onChange","required","Component","Filter","filter","ContactListItem","id","onClick","ContactList","contacts","map","App","changeFilter","addContact","find","contact","alert","newContact","nanoid","prevState","deleteContact","contactId","getFilteredContacts","normalizedFilter","toLowerCase","includes","currentContactList","JSON","parse","localStorage","getItem","prevProps","prevContacts","currentContacts","setItem","stringify","filteredContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a01d59bf.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 600px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 25px auto 0;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: DarkCyan;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  color: Teal;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0.5em;\r\n  margin: 0.5em;\r\n  color: Teal;\r\n  background: AliceBlue;\r\n  border: none;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: DarkCyan;\r\n  color: white;\r\n\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid DarkCyan;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background: white;\r\n    color: DarkCyan;\r\n  }\r\n`;\r\n\r\nconst ButtonItems = styled(Button)`\r\n  margin: 0;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  color: Teal;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst TextFilter = styled(Text)`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  margin-top: 15px;\r\n  padding: 15px;\r\n  border: 2px solid DarkCyan;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst Items = styled.li`\r\n  min-width: 300px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nexport {\r\n  Wrapper,\r\n  Title,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  ButtonItems,\r\n  Text,\r\n  TextFilter,\r\n  List,\r\n  Items,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Form, Label, Input, Button } from 'styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    });\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label>\r\n          Name\r\n          <br />\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Number\r\n          <br />\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </Label>\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { TextFilter, Input } from 'styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <>\r\n      <TextFilter>Find contacts by name</TextFilter>\r\n      <Input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { Text, ButtonItems } from 'styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ id, name, number, onClick }) => {\r\n  return (\r\n    <>\r\n      <Text>{name}:</Text>\r\n      <Text>{number}</Text>\r\n      <ButtonItems type=\"button\" onClick={() => onClick(id)}>\r\n        Delete\r\n      </ButtonItems>\r\n    </>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contacs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\nimport { List, Items } from 'styles';\r\n\r\nconst ContactList = ({ contacts, onClick }) => {\r\n  return (\r\n    <List>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <Items key={id}>\r\n          <ContactListItem\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onClick={onClick}\r\n          />\r\n        </Items>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\nimport { Wrapper, Title } from 'styles';\nimport { nanoid } from 'nanoid';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const currentContactList = JSON.parse(localStorage.getItem('contacts'));\n\n    if (currentContactList) {\n      this.setState({ contacts: currentContactList });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevContacts = prevState.contacts;\n    const currentContacts = this.state.contacts;\n\n    if (prevContacts !== currentContacts) {\n      localStorage.setItem('contacts', JSON.stringify(currentContacts));\n    }\n  }\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  addContact = ({ name, number }) => {\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      const newContact = {\n        id: nanoid(),\n        name: name,\n        number: number,\n      };\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <Wrapper>\n        <div>\n          <Title>Phonebook</Title>\n          <ContactForm onSubmit={this.addContact} />\n        </div>\n        {filteredContacts.length > 0 ? (\n          <div>\n            <Title>Contacts</Title>\n            <Filter filter={filter} onChange={this.changeFilter} />\n            <ContactList\n              contacts={filteredContacts}\n              onClick={this.deleteContact}\n            />\n          </div>\n        ) : (\n          <Title>You don't have contacts</Title>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}