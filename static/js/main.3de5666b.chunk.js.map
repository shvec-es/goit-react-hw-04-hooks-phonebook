{"version":3,"sources":["styles.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Wrapper","styled","div","Title","h2","Form","form","Label","label","Input","input","Button","button","ButtonItems","Text","p","TextFilter","List","ul","Items","li","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","preventDefault","type","pattern","title","onChange","required","Filter","filter","ContactListItem","id","onClick","ContactList","contacts","map","App","setContacts","setFilter","useEffect","currentContactList","JSON","parse","localStorage","getItem","setItem","stringify","filteredContacts","normalizedFilter","toLowerCase","includes","getFilteredContacts","find","contact","alert","newContact","nanoid","prevContacts","length","contactId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3de5666b.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 600px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 25px auto 0;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: DarkCyan;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  color: Teal;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0.5em;\r\n  margin: 0.5em;\r\n  color: Teal;\r\n  background: AliceBlue;\r\n  border: none;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: DarkCyan;\r\n  color: white;\r\n\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid DarkCyan;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background: white;\r\n    color: DarkCyan;\r\n  }\r\n`;\r\n\r\nconst ButtonItems = styled(Button)`\r\n  margin: 0;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  color: Teal;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst TextFilter = styled(Text)`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  margin-top: 15px;\r\n  padding: 15px;\r\n  border: 2px solid DarkCyan;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst Items = styled.li`\r\n  min-width: 300px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nexport {\r\n  Wrapper,\r\n  Title,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  ButtonItems,\r\n  Text,\r\n  TextFilter,\r\n  List,\r\n  Items,\r\n};\r\n","import { useState } from 'react';\r\nimport { Form, Label, Input, Button } from 'styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label>\r\n        Name\r\n        <br />\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Number\r\n        <br />\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </Label>\r\n      <Button type=\"submit\">Add contact</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { TextFilter, Input } from 'styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <>\r\n      <TextFilter>Find contacts by name</TextFilter>\r\n      <Input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { Text, ButtonItems } from 'styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ id, name, number, onClick }) => {\r\n  return (\r\n    <>\r\n      <Text>{name}:</Text>\r\n      <Text>{number}</Text>\r\n      <ButtonItems type=\"button\" onClick={() => onClick(id)}>\r\n        Delete\r\n      </ButtonItems>\r\n    </>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contacs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\nimport { List, Items } from 'styles';\r\n\r\nconst ContactList = ({ contacts, onClick }) => {\r\n  return (\r\n    <List>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <Items key={id}>\r\n          <ContactListItem\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onClick={onClick}\r\n          />\r\n        </Items>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useState, useEffect } from 'react';\nimport { Wrapper, Title } from 'styles';\nimport { nanoid } from 'nanoid';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const currentContactList = JSON.parse(localStorage.getItem('contacts'));\n\n    if (currentContactList) {\n      setContacts(currentContactList);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const changeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const addContact = ({ name, number }) => {\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      const newContact = {\n        id: nanoid(),\n        name,\n        number,\n      };\n      setContacts(prevContacts => [newContact, ...prevContacts]);\n    }\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevContacts =>\n      prevContacts.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <Wrapper>\n      <div>\n        <Title>Phonebook</Title>\n        <ContactForm onSubmit={addContact} />\n      </div>\n      {filteredContacts.length > 0 ? (\n        <div>\n          <Title>Contacts</Title>\n          <Filter filter={filter} onChange={changeFilter} />\n          <ContactList contacts={filteredContacts} onClick={deleteContact} />\n        </div>\n      ) : (\n        <Title>You don't have contacts</Title>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}